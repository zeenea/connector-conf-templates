name = ""
code = ""
connector_id = "aws.glue"
enabled = true

# Define the catalog code associated with the connection ("default" when empty).
# catalog_code = ""

# Defines the list of aliases used by other connectors to generate lineage link.
# alias = ["localhost:1234/db","https://some-url.org"]

# Define secret manager for this connection. 
# This configuration only works with Scanner 73+ and needs a functional secret manager configured in the scanner configuration file.
#secret_manager {
#    enabled = true
#    key = "<secret_name>"
#}

connection {
    aws {
        # AWS Glue Profile
        #profile =

        # AWS Glue Access Key Identifier. 
        # (or set AWS_ACCESS_KEY_ID environment variable or set a profile)
        # access_key_id = 
        
        # AWS Glue Secret Access Key.
        # (or set AWS_SECRET_ACCESS_KEY environment variable or set a profile)
        #secret_access_key = 
        
        # AWS Region.
        # (or set AWS_REGION environment variable or set a profile)
        #region =

        # Multi account support.
        #
        # Allow a single connection to retrieve data from other AWS account data catalog.
        # In order to connect to multiple accounts, you need to configure AWS cross access between accounts.
        # Link to related AWS documentation : https://docs.aws.amazon.com/glue/latest/dg/cross-account-access.html
        # Default value is false.
        #
        # Warning: this parameter should not be changed after datasets have been imported because it changes the ways datasets are identified.
        multi_account {
            # Enable multi-account, default value is false.
            #enabled = false

            # Define which account/region to connected to. It must be a list of <account-id>:<region>, separated by a space.
            # Example : "123456789012:eu-west-2 987654321098:eu-west-2"
            #list = ""
        } 


    }

    # (Advanced) define the size of batch of items loaded by each request in inventory.
    #fetch_page_size = 
}

# Filter Inventory
#
# Filter the relations (tables or views) that should be keep in the inventory.
# Use the rich filter language described in documentation.
# https://zeenea-platform-docs.netlify.app/docs/zeenea-filters
#
# filter keys are:
#   database : the database name.
#   table  : the table or view name.
#
#   filter = """
#           database in ('production', 'qa') 
#       and table ~ /(?:hr|it|market)_figures/
#   """
#
# Note: Filter can contain either the raw value or a file URL to the content. (e.g. file:///path/to/zeenea/connections/aws-glue-inventory-filter.json)
#       When using an side-file, filter changes are taken into account without restarting the scanner.
#
#filter = ""
