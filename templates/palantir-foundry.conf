name = ""
code = ""
connector_id = "palantir"

connection {

    # Palantir Foundry Server URL
    # Example http://palantir.example.com:8080
    url = ""

    # Token settings
    # token = ""

    #
    # OAuth2 settings
    #
    # (optional) OAuth2 endpoint
    # Default value get it from connection.url parameter completed by "/multipass/api/oauth2/token".
    #
    # Example: "http://palantir.example.com:8080/multipass/api/oauth2/token"
    #
    # oauth.endpoint = ""

    # Application ID (client) as defined in Palantir.
    oauth.client_id = ""

    # Application's password (client) as defined in Palantir.
    oauth.client_secret = ""
    # oauth.scope = ""

}

inventory {
    # From Data Catalog
    from_datacatalog = "true"
    # With Ontology
    with_ontology = "false"
}

# Filter
#
# Filter the jobs that should be imported during synchronization process.
# Use the rich filter language describe in documentation.
#       English version: https://support.zeenea.com/hc/en/articles/21269299175569-Filtres
#       French  version: https://support.zeenea.com/hc/fr/articles/21269299175569-Filtres
#
# filter keys are:
#   collection : To filter collection by name
#
# Example:
#   filter = "collection != 'Project Catalog'"
#
# Note: Filter can contain either the raw value or a file URL to the content. (e.g. file:///path/to/zeenea/connections/palantir-filter.json)
# When using an side-file, filter changes are taken into account without restarting the scanner.
#filter = ""

# tls {
#  truststore {
#    # Path to the trust store file
#    path = ""
#    # Password of the trust store file.
#    password = ""
#    # Type of the trust store file. (PKCS12 ou JKS), default value is discovered from the file extension.
#    type = ""
#  }
#  # By Pass Certificate Validation, default is false. (should be kept false)
#  #bypass_certificate_validation = "true"
# }

# proxy {
#     #  proxy scheme (choose https or http)
#     scheme =
#     hostname =
#     port =
#     #username =
#     #password =
# }
