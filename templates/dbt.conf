name = ""
code = ""
connector_id = "dbt"
enabled = true

# Define the catalog code associated with the connection ("default" when empty).
# catalog_code = ""

# Define secret manager for this connection. 
# This configuration only works with Scanner 73+ and needs a functional secret manager configured in the scanner configuration file.
#secret_manager {
#    enabled = true
#    key = "<secret_name>"
#}

connection {
    # Path to the root directory containing one or more dbt projects.
    #
    # Must be formatted like :
    #  - Amazon S3 : s3://[bucket_name]/[optional_prefix]
    #  - Google Storage : gs://[bucket_name]/[optional_prefix]
    #  - Azure ADLS Gen 2 : "http://[account_name].dfs.core.windows.net/[container_name]/[optional_prefix]"
    #  - File System : file:///[path_to_projects] or [path_to_projects]
    path = ""

    # Google Cloud Storage
    # google_cloud {
    #     # Project Id used at connection. Invoices will be sent to this project.
    #     project_id = ""
    # 
    #     # JSON key either as an embedded raw value (use triple quotes """{ "json: "here" }""")
    #     # Or as a file by setting a absolute file URL (e.g. file:///etc/bigquery/zeenea-key.json)
    #     json_key = ""
    # }

    # Amazon S3
    #
    # The connector uses the official Amazon SDK.
    # So the following parameters can be set to specify a region and an access key.
    # If not set, information will be taken from:
    #   1. environment variables
    #   2. shared credential and config files
    #   3. ECS container or EC2 instance role.
    #
    # see Amazon documentation <https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/credentials.html>
    #
    # aws {
    #     access_key_id = ""
    #     secret_access_key = ""
    #     region = "eu-west-3"
    # }

    # Azure ADLS Gen 2
    #
    # Two authentication methods are available:
    # 1. Service Account OAuth2 credentials (client_id, client_secret, tenant_id)
    # 2. Account Key (account_name, account_key)
    #   
    # azure {
    #     # OAuth2 credentials
    #     tenant_id = null
    #     client_id = null
    #     client_secret = null
    #     
    #     # Account Key
    #     account_name = null
    #     account_key = null
    # }
}

# Proxy configuration
# proxy {
#     #  proxy scheme (choose https or http)
#     scheme =
#     hostname = 
#     port =
#     #username = 
#     #password = 
# }


# Activate Multi Catalog Support (true/false)
# multi_catalog.enabled = 

dbt {
    # Path to the profiles file. (Optional)
    #
    # Must be formatted like :
    #  - Amazon S3 : "s3://bucket_name/path/to/profiles.yml"
    #  - Google Storage : "gs://bucket_name/path/to/profiles.yml"
    #  - Azure ADLS Gen 2 : "http://account_name.dfs.core.windows.net/container_name/path/to/profiles.yml"
    #  - File System : "file:///path/to/profiles.yml" or "/path/to/profiles.yml"
    #
    # If not set Zeenea looks for an environment variable DBT_PROFILES_DIR, 
    # if set the file $DBT_PROFILES_DIR/profiles.yml is used ;
    # otherwise the file $HOME/.dbt/profiles.yml is used.
    #
    # Note: the YAML should not contain anchors or references.
    #
    #profiles_yml = 
    
    # Target environment. (Optional)
    # If not set the default target of the profile is used.
    #target = 
}


