name = ""
code = ""
connector_id = "Atlas"
enabled = true

# Define the catalog code associated with the connection ("default" when empty).
# catalog_code = ""

# Defines the list of aliases used by other connectors to generate lineage link.
# alias = ["localhost:1234/db","https://some-url.org"]

# Define secret manager for this connection. 
# This configuration only works with Scanner 73+ and needs a functional secret manager configured in the scanner configuration file.
#secret_manager {
#    enabled = true
#    key = "<secret_name>"
#}

connection {
    # Atlas Host
    url = 
    username = 
    password =

    # Authentication scheme (accepted values : "Basic","Digest","Ntlm","Spnego","Kerberos") (default: "Basic")
    #authentication_scheme = "Basic"

    # Maximum concurrent requests to Atlas (default: 16)
    #max_concurrent_request = 16

    # Request timeout in seconds (default: 60 s)
    #request_timeout = 60

    # Request page size (default: 100)
    #request_page_size = 100
}

# Allows adding the "minExtInfo" parameter when calling the Atlas entity retrieval service.
#
# The connector parameter is optional, it takes as input a list of Atlas type, with values separated by a comma.
# Allowed values : hive_table, hbase_table, hive_process, hdfs_path, spark_process, sqoop_process or sqoop_dbdatastore
#
# Example : api.min_ext_info.atlas_types = "hive_table, hive_process"
# api.min_ext_info.atlas_types = ""

cache {
    # Directory where caches are stored
    path = ${zeenea.scanner.home}/cache
    inventory {
        # Enable Inventory cache
        enable = true
        # Inventory Cache expiration Delay (format ISO-8601: PnDTnHnMn.nS)
        # Example: "P1D": 1 day, "PT12H": 12 hours 
        expiration_delay = "PT24H"

        # Inventory Process Timeout (format ISO-8601: PnDTnHnMn.nS)
        # Example: "P1D": 1 day, "PT1H": 1 hours, "PT55M": 55 minutes
        # Default value: 55 minutes (PT55M) 
        #timeout = "PT55M"
    }
}

#
# Allow to filter items that will be inventoried and imported in Zeenea.
# Filters use two parameters: includes and excludes.
# Items listed in includes are accepted.
# Items listed in excludes are refused event if they are listed in includes.
# If includes is null then it is equivalent to the list of all possible values.
# If excludes is null then it is equivalent to the empty list.
#
filter {
    # Filter on the atlas item type.
    #
    # includes and excludes are a string containing a list of supported types separated by a comma.
    # Example: excludes: "hdfs_path, sqoop_process, sqoop_dbdatastore"
    #
    # By default all supported types are inventoried and imported.
    # Inventoried types are: 
    #   - hive_table,
    #   - hbase_table,
    #   - hdfs_path.
    #
    # Imported types are:
    #   - inventoried types,
    #   - hive_process,
    #   - spark_process,
    #   - sqoop_process,
    #   - sqoop_dbdatastore.
    # 
    atlas_type {
        # includes = null
        # excludes = null
    }
}
