name = ""
code = ""
connector_id = "denodo"
enabled = true

# Define the catalog code associated with the connection ("default" when empty).
# catalog_code = ""

# Defines the list of aliases used by other connectors to generate lineage link.
# alias = ["localhost:1234/db","https://some-url.org"]

# Define secret manager for this connection. 
# This configuration only works with Scanner 73+ and needs a functional secret manager configured in the scanner configuration file.
#secret_manager {
#    enabled = true
#    key = "<secret_name>"
#}

connection {
    # URL of the Denodo data catalog
    # Example: "http://denodo.example.com:9090/denodo-data-catalog"
    url = ""
    username = ""
    password = ""

    # JDBC configuration section.
    #
    # Use only if lineage to external sources is active (i.e. lineage.enabled = “true”).
    #jdbc {
    #    # JDBC url of the Denodo database
    #    # Example : "jdbc:denodo://localhost:9999/"
    #    url = ""
    #
    #    # JDBC username (optional).
    #    #
    #    # To be filled in if the username differs from the previous username used with the Denodo Data Catalog API.
    #    #username = ""
    #
    #    # JDBC password (optional).
    #    #password = ""
    #
    #    # Name of JDBC driver to be loaded before establishing JDBC connection (optional).
    #    #
    #    # By default, the "com.denodo.vdp.jdbc.Driver" driver is loaded.
    #    #class_name = "com.denodo.vdp.jdbc.Driver"
    #}
}

# Enables lineage with external sources.
lineage.enabled = "false"

# Filter
#
# Filter the relations (tables or views) that should be keep in the inventory.
# Use the rich filter language described in documentation.
# https://zeenea-platform-docs.netlify.app/docs/zeenea-filters
#
# filter keys are:
#   serverUrl: the server URL. (Example: '//denodo.example.com:9090/admin')
#   database : the database name.
#   view     : the view name.
#   type     : the view type ('derived', 'interface', 'base')
#
# Example:
#   filter = """
#           database in ('PRODUCTION', 'QA') 
#       and (
#              view starts with 'CUSTOM_' and not view ends with '_BAK'
#           or type in ('derived', 'interface')
#           )
#   """
#
# Note: Filter can contain either the raw value or a file URL to the content.
# Example:
#   filter = "file:///path/to/zeenea/connections/db2-filter.json"
#
# When using an side-file, filter changes are taken into account without restarting the scanner.
#
# filter = ""

# Data profiling max rows
# Defines the approximate number of rows that will be used to create the data profiling.
# Default value is 10000.
#fingerprint.sampling_max_rows = 10000


#tls {
#  bypass_certificate_validation = true
#  truststore {
#    path =
#    password =
#    type =
#  }
#}

# proxy {
#     #  proxy scheme (choose https or http)
#     scheme =
#     hostname =
#     port =
#     username =
#     password =
# }
