name = ""
code = ""
connector_id = "aws-quicksight"
enabled = true

# Define the list of aliases used by other connectors to generate lineage links.
# alias = ["localhost:1234/db","https://some-url.org"]

# Define secret manager for this connection. 
# This configuration only works with Scanner 73+ and needs a functional secret manager
# configured in the scanner configuration file.
# secret_manager {
#    enabled = true
#    key = "<secret_name>"
# }

connection {
    aws {
        # AWS Profile
        # (or set AWS_PROFILE environment variable)
        profile = "default"

        # AWS Access Key Identifier.
        # (or set AWS_ACCESS_KEY_ID environment variable or set a profile)
        # access_key_id = ""

        # AWS Secret Access Key.
        # (or set AWS_SECRET_ACCESS_KEY environment variable or set a profile)
        # secret_access_key = ""

        # AWS Region.
        # (or set AWS_REGION environment variable or set a profile)
        region = "us-east-2"
    }

    quicksight {
        # 12-digit Id of the AWS Account from which the QuickSight account was created
        aws_account_id = "012345678901"

        # Owner of the QuickSight assets to catalog. By default, all accessible assets owned
        # by any user are cataloged.
        owner {
             # Identifier of the QuickSight user. It can be specified as the Arn, Username or Email.
             # The Arn value starts with ":arn" and no additional prefixes should be added.
             # If specifying the Username value, include the "username:" prefix.
             # If specifying the Email, add the "email:" prefix.
             # A single value should be specified. If empty value is specified, the owner will not be considered
             # for the inventory operations.
             id = ""
             #
             # Owner scope. One of:
             # "quicksight_user"
             # "quicksight_owner"
             # "quicksight_sole_owner"
             # "quicksight_viewer_or_owner"
             # "direct_quicksight_owner"
             # "direct_quicksight_sole_owner"
             # "direct_quicksight_viewer_or_owner"
             # A single value should be specified. If no value is specified, no items will be added to the inventory.
             # The "quicksight_*" scopes are not supported for the datasource assets. If any of those
             # values is specified, all datasources will be excluded from to the inventory.
             # The "quicksight_user" scope is not supported for the dataset (and datasource) assets. If this
             # value is specified, all dataset (and datasource) assets will be excluded from the inventory.
             scope = "direct_quicksight_owner"
             #
             # Namespace of the owner. A single value should be specified. If no value is specified, no items will
             # be added to the inventory.
             namespace = "default"
        }
    }

    # (Advanced) define the size of batch of items loaded by each request in inventory.
    fetch_page_size = 20

    # Custom URL (only for QuickSight compatible services)
    # url = null
}

# tls {
#  truststore {
#    # Path to the trust store file
#    path = ""
#    # Password of the trust store file.
#    password = ""
#    # Type of the trust store file. (PKCS12 ou JKS), default value is discovered from the file extension.
#    type = ""
#  }
#  # Bypass Certificate Validation, default is false. (recommended)
#  # bypass_certificate_validation = "false"
# }

# proxy {
#     #  proxy scheme (https or http)
#     scheme =
#     hostname =
#     port =
#     # username =
#     # password =
# }
    
#
# filter keys are:
#   type: QuickSight object type: datasource, physical, processing, output, analysis, dashboard
#         The types physical, processing and output refer to the three sub-components of a QuickSight DataSet asset.
#   name: QuickSight asset name
#   created_time: QuickSight object created time (UTC timestamp)
# example:
#   filters = [
#     {
#       id="aws-quicksight"
#       action = ACCEPT
#       rules = {
#          "type": "glob:data*"
#          "name": "glob:Sales*"
#          "created_time": "regex:2025-0[3-6].*"
#       }
#     }
# filters = []
