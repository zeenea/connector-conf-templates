name = 
code = 
connector_id = "AmazonS3"

connection {
    aws {
        # access_key_id = 
        # secret_access_key =
        # region = "eu-west-3"
    }

    # Custom URL (leave blanck do not set to use AWS S3)
    #url = null
}

# Proxy configuration
#proxy {
#    # Endpoint URL of the proxy
#    endpoint = null
#
#    # proxy user name
#    username = null
#    
#    # proxy user password
#    password = null
#}

# List of buckets to Bucket List (spaces separated)
#s3.bucket_list = null

# Cache
# When inventoried buckets are very large and contains a lot of objects, the connector can consume a large amount of memory.
# It is possible to cache the object list on disque to reduce memory consumption.
# To enable disk cache, just set the path to a file. (You can both set an absolute or a relative path, however, relative paths are dependant of the current directory at the scanner launch time.
# Examples:
#     - "/opt/zeenea-scanner/cache/s3.cache"
#     - "/var/lib/zeenea-scanner/s3.cache"
#     - """C:\zeenea-scanner\cache\s3.cache"""
# cache {
#     path = null
# }

# Use new XML namespace identification, replace with value "legacy" if XML were imported from the connection before.
xml.namespace_identification = "uri"


# Filter
#
# Filter the objects that should be taken into consideration by the inventory.
#
# Use the rich filter language describe in documentation.
#       English version: https://support.zeenea.com/en/support/solutions/articles/44002389524-filters
#       French  version: https://support.zeenea.com/fr/support/solutions/articles/44002389524-filtres
#
# filter keys are:
#   bucket: the bucket name.
#   key   : the key of the object in the bucket.
#
# If there is an object 's3:///cogip_prod_sales/forecasts/europa/france/paris-2023.parquet'.
# The value of associated to 'bucket' will be 'cogip_prod_sales'.
# The value of associated to 'key' will be 'forecasts/europa/france/paris-2023.parquet'.
#
# Example:
#   filter = """
#           bucket starts with 'cogip_prod_'
#       and ! (
#              key ~ '*/test*'
#           or key ~ /.*\/secret_assets\/.*/
#           )
#   """
#
# Note: Filter can contain either the raw value or a file URL to the content.
# Example:
#   filter = "file:///path/to/zeenea/connections/s3-filter.json"
#
# When using an side-file, filter changes are taken into account without restarting the scanner.
#
# filter = ""
