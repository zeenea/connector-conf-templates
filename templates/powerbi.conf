name =
code =
connector_id = "powerbi"

connection {
    tenant =
    url = "https://api.powerbi.com"
    oauth.client_id =
    oauth.client_secret =
    oauth.endpoint = "https://login.microsoftonline.com/{tenant}/oauth2/v2.0/token"
}

# Filter used to keep only workspaces/reports that matches this filter.
#
# Use the rich filter language describe in documentation.
#       English version: https://support.zeenea.com/en/support/solutions/articles/44002389524-filters
#       French  version: https://support.zeenea.com/fr/support/solutions/articles/44002389524-filtres
#
# filter keys are:
#   workspace: Workspace to keep or filter.
#   report: Report to keep or filter.
#
# Example:
#   filter = "workspace starts with 'zeenea_' and not report ends with 'test'"
#
# Note: Filter can contain either the raw value or a file URL to the content. (e.g. file:///path/to/zeenea/connections/powerbi-inventory-filter.json)
# When using an side-file, filter changes are taken into account without restarting the scanner.
#filter = ""

# Filter used to keep only contact that matches this filter.
#
# Use the rich filter language describe in documentation.
#       English version: https://support.zeenea.com/en/support/solutions/articles/44002389524-filters
#       French  version: https://support.zeenea.com/fr/support/solutions/articles/44002389524-filtres
#
# filter keys are:
#   role: Role to keep or filter.
#
# Example:
#   contact.role_filter = "role in ('Owner')"
#
# Note: Filter can contain either the raw value or a file URL to the content. (e.g. file:///path/to/zeenea/connections/powerbi-contact-filter.json)
# When using an side-file, filter changes are taken into account without restarting the scanner.
#contact.role_filter = ""

# DSN Configuration
#
# Define a list of DSN used by PowerBI Desktop.
# A DSN contains values used by the connector to build lineage with external sources by using different attributes :
# - "name": The name of the DSN (mandatory)
# - "awsRegion": The name of the AWS region, used by AWS Athena (optional)
# - "database": The name of the database (optional)
# - "host": The host of the server (optional)
# - "port": The port of the server (optional)
#
# Each DSN configuration depends of the type of data source.
# For Athena, we need the name and the AWS Region, for Snowflake, the name, the host and the database, ...
#
# Examples:
#    # URL are relative to the current working directory not the installation directory.
#    dsn.configuration = "file:connections/dsn_configuration.json"
#    dsn.configuration = "file:///opt/zeenea-scanner/connections/dsn_configuration.json"
#    dsn.configuration = """
#       [
#           {
#               "name": "Simba Athena",
#               "awsRegion": "eu-west-3"
#           },
#           {
#               "name": "Snowflake PRD",
#               "host": "test1234.eu-west-1.snowflakecomputing.com",
#               "database": "MY_DB_PRD"
#           },
#           {
#               "name": "ON PREM MS SQL",
#               "host": "my_custom_host",
#               "port": "my_port",
#               "database": "MY_DB_PRD"
#           }
#       ]
#   """
#dsn.configuration =

# Cache
# Used to avoid PowerBI API call limits. The connector will store workspace information into a file on disk during inventory.
# This property must target an existing file on disk. (You can both set an absolute or a relative path, however, relative paths are dependant of the current directory at the scanner launch time.
# If not defined, the connector will create a cache file in the subfolder "cache" in the scanner folder with this connector name.
# Examples:
#     - "/opt/zeenea-scanner/cache/workspace.cache"
#     - "/var/lib/zeenea-scanner/workspace.cache"
#     - """C:\zeenea-scanner\cache\workspace.cache"""
#cache {
#    path = null
#}

# proxy {
#     scheme =
#     hostname =
#     port =
#     username =
#     password =
#   }