name = ""
code = ""
connector_id = "google-dataplex-v2"
enabled = true

# Define the catalog code associated with the connection ("default" when empty).
# catalog_code = ""

# Defines the list of aliases used by other connectors to generate lineage link.
# alias = ["localhost:1234/db","https://some-url.org"]

# Define secret manager for this connection. 
# This configuration only works with Scanner 73+ and needs a functional secret manager configured in the scanner configuration file.
#secret_manager {
#    enabled = true
#    key = "<secret_name>"
#}

connection {
    # JSON key either as an embedded raw value (use triple quotes """{ "json: "here" }""")
    # Or as a file by setting a absolute file URL (e.g. file:///etc/dataplex/zeenea-key.json)
    json_key = ""
}

# At least one project_id and location_id should be set.
scope {
    # Configure project list to scan (a list of project_id separated by comma)
    project_id = ""
	
	# Configure location id from GCP (only 1 location id is supported)
    # GCP cloud region list : https://cloud.google.com/compute/docs/regions-zones#available
    location_id = ""
}

# Filter used to keep only items that match this filter.
#
# Use universal filter language described in documentation.
# https://docs.actian.com/zeenea/#page/Technical%20Documentation/zeenea-universal-filters.html
#
# Rules filter keys are :
# - entry_group   : Dataplex Entry Group (@bigquery)
# - project       : Dataplex Entry project
# - dataset       : Dataplex Entry dataset
# - table         : Dataplex Entry table
#
# Example:
#filters = [
#  {
#    id="accept_zeenea_dataset"
#    action = ACCEPT
#    rules {
#      dataset = "ZEENEA*"
#    }
#  },
#  {
#    id = "default_reject"
#    action = REJECT
#  }
#]
#
# filters = []

# proxy {
#     #  proxy scheme (choose https or http)
#     scheme =
#     hostname = 
#     port =
#     #username = 
#     #password = 
# }

# quota {
#     # Timeout of the query in minutes
#     #timeout_minute = 10
#
#     # Read per minute quota
#     #read_per_minute = 6000
#
#     # Search per user per minute quota
#     #search_per_user_per_minute = 180
#
#     # Max retries when a request fails because of expired quota
#     #max_retry = 10
# }
