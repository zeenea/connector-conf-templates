name = 
code = 
connector_id = "SqlServer"

connection {
    # JDBC URL
    url = 

    # Default Connection Database
    #
    # When multi_catalog is enabled, this is the database used by default for the connection.
    # Otherwise it will override the database set in URL.
    #
    # The value can also be defined in the URL.
    #
    # Note: When connecting to an Azure SQL Database, this parameter should not be used and the database should be provided in the URL.
    #
    #database = 

    username = 
    password =
}


# Multi catalog support.
#
# Allow a single connection to manage all catalog (or databases) of the instance.
# Default value is false for backward compatibility reasons but this template enables it by default.
# If you are updating an existing connection, make sure to keep the previous value (or remove this entry).
#
# Important: This function should not yet be enabled on Azure SQL Database.
#
# Warning: this parameter should not be changed after datasets have been imported because it changes the ways they are identified.
#
multi_catalog.enabled = "true"

# Filter
#
# Filter the relations (tables or views) that should be keep in the inventory.
# Use the rich filter language describe in documentation.
#       English version: https://support.zeenea.com/en/support/solutions/articles/44002389524-filters
#       French  version: https://support.zeenea.com/fr/support/solutions/articles/44002389524-filtres
#
# filter keys are:
#   catalog: the catalog name (only availaible if multi catalog is enabled)
#   schema : the schema name.
#   table  : the table or view name.
#
# Example:
#   filter = """
#           catalog in ('PRODUCTION', 'QA') 
#       and (
#              schema starts with 'CUSTOM_' and not table ends with '_BAK'
#           or schema ~ 'INTERN_*' and table ~ /(?:HR|IT|MARKET)_FIGURES/
#           or schema = 'MUSIC' and table contains 'ALBUMS' and table != 'OLD_ALBUMS'
#           )
#   """
#
# Note: Filter can contain either the raw value or a file URL to the content.
# Example:
#   filter = "file:///path/to/zeenea/connections/sqlserver-filter.json"
#
# When using an side-file, filter changes are taken into account without restarting the scanner.
#
# filter = ""

# Activate Lineage on Views (false by default)
# lineage.view.enabled =
